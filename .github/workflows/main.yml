name: Build Release

on:
  push:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'

    - name: Install Dependencies
      run: npm install

    - name: Install Quasar CLI
      run: npm install -g @quasar/cli @quasar/icongenie

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.AAA }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Build Mac Package
      run: |
        quasar build -m electron -T mas -A arm64
        cd dist/electron/Packaged
        # app_path="/home/runner/work/flypen-frontend/flypen-frontend/dist/electron/Packaged/Flypen-mas-arm64/Flypen.app/"
        # app_name="$(basename "$app_path" | sed -r "s/\.app$//g")"
        # dmg_size="$(du -ms "$app_path" | grep -oP "^\d+")"
        # dmg_path=$(sed -r "s/\.app\/?$/.dmg/g" <<< "$app_path")
        # set -x
        # dd if=/dev/zero "of=$dmg_path" bs=1M "count=$dmg_size"
        # label=$(sed -r "s/\s/_/g" <<< "$app_name")
        # label=$(sed -r "s/^(.{,27}).*$/\1/g" <<< "$label")
        # sudo apt install hfsutils hfsprogs
        # sudo hformat -l "$label" "$dmg_path"
        # mount_point="$(sudo mktemp -d)"
        # sudo mount -t hfs -o loop "$dmg_path" "$mount_point"
        # cp -R "$app_path" "$mount_point"
        # ls -l "$mount_point"
        # umount "$mount_point"
        zip -r flypen-mac-apple-chip.zip Flypen-mas-arm64
        cd -

    - name: Upload Mac
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.AAA }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/electron/Packaged/flypen-mac-apple-chip.zip
        asset_name: flypen-mac-apple-chip.zip
        asset_content_type: application/zip

    - name: Build Linux Package
      run: |
        quasar build -m electron
        cd dist/electron/Packaged
        tar -zcvf Linux-x86_64.tar.gz Flypen-linux-x64
        cd -

    - name: Upload Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.AAA }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/electron/Packaged/Linux-x86_64.tar.gz
        asset_name: flypen-linux-x86_64.tar.gz
        asset_content_type: application/gzip

    - name: Build Windows Package
      run: |
        sed -i "/packager:/a \ \ platform: 'win32'" quasar.config.js
        sudo apt install -y wine64
        quasar build -m electron
        cd dist/electron/Packaged
        zip -r  Windows-x86_64.zip Flypen-win32-x64
        cd -

    - name: Upload Win32
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.AAA }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/electron/Packaged/Windows-x86_64.zip
        asset_name: flypen-windows-x86_64.zip
        asset_content_type: application/zip

    - name: Set up jdk
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-8-jdk openjdk-17-jdk

    - name: Setup Android SDK Tools
      uses: android-actions/setup-android@v2.0.2

    - name: Add Mode
      run:  |
        echo "org.flypen.app" | quasar mode add capacitor
        jq 'del(.server)' ./src-capacitor/capacitor.config.json > ./src-capacitor/edit.json && mv ./src-capacitor/edit.json ./src-capacitor/capacitor.config.json

    - name: Build APK
      env:
        JAVA_HOME: "/usr/lib/jvm/java-17-openjdk-amd64"
      run: quasar build -m capacitor -T android

    - name: Add Icon
      run: icongenie generate -m capacitor -i ./icon.png

    - name: Build APK with icon
      env:
        JAVA_HOME: "/usr/lib/jvm/java-17-openjdk-amd64"
      run: quasar build -m capacitor -T android

    - name: Bump version and push tag
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.AAA }}
        release_branches: main

    - name: Sign APK
      env:
        JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
      run: |
        wget https://github.com/patrickfav/uber-apk-signer/releases/download/v1.3.0/uber-apk-signer-1.3.0.jar
        java -jar uber-apk-signer-1.3.0.jar -a ./dist/capacitor/android/apk/release/app-release-unsigned.apk --out signed

    - name: Upload APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.AAA }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./signed/app-release-aligned-debugSigned.apk
        asset_name: flypen-universal-release.apk
        asset_content_type: application/vnd.android.package-archive
